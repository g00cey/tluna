"Vundle
if has("win32") || has("win64")
  set rtp+=~/vimfiles/vundle/
  let $DOTVIM = expand('~/vimfiles')
else 
  set rtp+=~/.vim/vundle/
  let $DOTVIM = expand('~/.vim')
endif
call vundle#rc('$DOTVIM/bundle')
colorscheme koehler

"templates
augroup SkeletonAu
  autocmd!
  autocmd BufNewFile *.html 0r ~/.vim/templates/skel.html
augroup END

"tags
set tags=~/.tags

"original repos on github
Bundle 'gmarik/vundle'
Bundle 'fugitive.vim'
Bundle 'project.tar.gz'
Bundle 'taglist.vim'
Bundle 'listtag'
Bundle 'git://github.com/thinca/vim-ref.git'
Bundle 'git://github.com/tpope/vim-rails.git'
Bundle 'eruby.vim'
Bundle 'ruby.vim'
Bundle 'DirDiff.vim'
Bundle 'svndiff.vim'
Bundle 'Align'
Bundle 'matchit.zip'
Bundle 'Rubytest.vim'
Bundle 'neocomplcache'
Bundle 'EnhCommentify.vim'
Bundle 'unite.vim'
Bundle 'ZenCoding.vim'
Bundle 'surround.vim'
Bundle 'quickrun'
Bundle 'superSnipMate'
Bundle 'TwitVim'
Bundle 'Solarized'
Bundle 'SudoEdit.vim'

filetype plugin indent on
syntax on

if has('win32') || has('win64')
  let g:netrw_scp_cmd='C:/soft/putty/pscp.exe -q -batch'
  let g:netrw_ssh_cmd='C:/soft/putty/plink.exe'
endif

"xpath-search
"let g:loaded_xpath = 1

" edit
set autoindent
set smartindent
set showmatch
set wildmenu

"tab
set tabstop=2
set shiftwidth=2
set expandtab
set autoindent

"display 
set         number

"filebackup
set backup
set swapfile
if has("win32") || has("win64")
  set dir=~/vimfiles/swap
  set backupdir=~/vimfiles/backup
else 
  set dir=~/.vim/swap
  set backupdir=~/.vim/backup
endif


"fileenconrdings
set fileencodings=utf-8,iso-2022-jp,sjis

"vim/ruby
let g:rubycomplete_buffer_loading = 1
let g:rubycomplete_classes_in_global = 1
let g:rubycomplete_rails = 1

imap <C-Space> <C-x><C-o>

"rails.vim
let g:rails_dbext      = 1
let g:rails_gnu_screen = 1
let g:rails_modelines  = 1

"netrw
"let g:netrw_liststyle = 3
let g:loaded_netrwPlugin = 1
let g:netrw_altv = 1

"grep
let Grep_Path             = 'grep'
let Fgrep_Path            = 'fgrep'
let Egrep_Path            = 'egrep'
let Grep_Find_Path        = 'find'
let Grep_Xargs_Path       = 'xargs'
let Grep_Shell_Quote_Char = '"'

"align
let g:Align_xstrlen = 3

"ref
"alc (eijirou)
nmap ,ra :<C-u>Ref alc<Space>
"refe (ruby-refe)
nmap ,rr :<C-u>Ref refe<Space>
let g:ref_alc_start_linenumber = 100 "表示する行数
let g:ref_alc_encoding = 'Shift-JIS'

"neocomplcache
let g:neocomplcache_enable_at_startup = 1 " 起動時に有効化
